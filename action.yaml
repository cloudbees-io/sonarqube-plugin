apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: sonarqube-hybrid-plugin
inputs:
  url: 
    description: 'Server URL'
    required: true
  username:  
    description: 'Sonarqube username'
    required: false
  password:
    description: 'Sonarqube password'
    required: false
  token:
    description: 'Sonarqube token'
    required: false
  ref:
    description: 'Flag to indicate the ref that should be archived (same as supplied to checkout)'
    required: false
    default: ''
  workspace-dir:
    description: 'Flag to mention the path where the checked out code will be present'
    required: false
    default: ''
  cmakeList-path:
    description: 'CMakeLists.txt file path needed for running make command for CFamily scans'
    required: false
    default: ''
outputs:
  critical-count:
    description: A string containing the number of Critical security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.critical-count}}
  very-high-count:
    description: A string containing the number of Very High security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.very-high-count}}
  high-count:
    description: A string containing the number of High security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.high-count}}
  medium-count:
    description: A string containing the number of Medium security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.medium-count}}
  low-count:
    description: A string containing the number of Low security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.low-count}}

runs:
  using: composite
  steps:
    - name: Generate sha and ref 
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-plugin-chain-utils:2312e778e9df96bc098dde0a12c6c1857c8eec54
      with:
        entrypoint: assets-plugin-chain-utils
        args: get-commit-info
      env:
        INPUT_CLOUDBEES_API_TOKEN: ${{ cloudbees.api.token }}
        INPUT_CLOUDBEES_API_URL: ${{ cloudbees.api.url }}
        INPUT_RUN_ID: ${{ cloudbees.run_id }}
        INPUT_CLOUDBEES_EVENT_PATH: /cloudbees/event.json
        INPUT_REF: ${{ inputs.ref }}
        INPUT_WORKSPACE_DIR: ${{ inputs.workspace-dir }}

    - name: Generate reference files 
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-plugin-chain-utils:2312e778e9df96bc098dde0a12c6c1857c8eec54
      with:
          entrypoint: assets-plugin-chain-utils
          args: generate-references --asset-type "CODE"
      env:
          INPUT_CLOUDBEES_API_TOKEN: ${{ cloudbees.api.token }}
          INPUT_CLOUDBEES_API_URL: ${{ cloudbees.api.url }}
          INPUT_RUN_ID: ${{ cloudbees.run_id }}

    - name: Run SCC Scan for tag generation
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-scc-scanner:1a81610bbb3d6e6f2c4586f21d85638e56718a70
      continue-on-error: true
      env:
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
      run: /app/plugin-scc-scanner -mode single

   
    - name: Run sonarqube compliance plugin
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-sonarqube-scanner:f086c531dce39825964ef24109d98bc97eb34887
      env:
          SONARQUBE_PROPS: '{"url": "${{ inputs.url }}" , "username": "${{ inputs.username }}", "password": "${{ inputs.password }}", "token": "${{ inputs.token }}"}'
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
          CMAKELIST_LOCATION: ${{ inputs.cmakeList-path }}
          
      run: /app/plugin-sonarqube-scanner -mode single

    - name: Complete execution plan
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-plugin-chain-utils:2312e778e9df96bc098dde0a12c6c1857c8eec54
      id: process-outputs
      with:
          entrypoint: assets-plugin-chain-utils
          args: process-outputs
      env:
          INPUT_CLOUDBEES_API_TOKEN: ${{ cloudbees.api.token }} 
          INPUT_CLOUDBEES_API_URL: ${{ cloudbees.api.url }}
          INPUT_RUN_ID: ${{ cloudbees.run_id }}
